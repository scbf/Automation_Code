<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Krypton" failures="1" tests="2" name="Default test" time="23.312" errors="0" timestamp="2023-06-28T16:46:04 IST">
  <testcase classname="AddingCategories.ADC1" name="addingCategories" time="8.525"/>
  <testcase classname="AddingCategories.ADC1" name="addingCategories" time="8.541">
    <failure type="org.testng.internal.reflect.MethodMatcherException" message="
[public void AddingCategories.ADC1.addingCategories(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: addingCategories([java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String arg3])
Arguments: [(java.lang.String) Non-Veg Corner,(java.lang.String) This corner is especially curated for the non vegetarian lovers. Each Item in this section is prepared with the tender meat that is freshly prepared....,(java.lang.String) Non Vegetarian corner consists of only three or limited types of meat types. But the most available is the chicken,(java.lang.Character) 2]">
      <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
[public void AddingCategories.ADC1.addingCategories(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.InterruptedException] has no parameters defined but was found to be using a data provider (either explicitly specified or inherited from class level annotation).
Data provider mismatch
Method: addingCategories([java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String arg3])
Arguments: [(java.lang.String) Non-Veg Corner,(java.lang.String) This corner is especially curated for the non vegetarian lovers. Each Item in this section is prepared with the tender meat that is freshly prepared....,(java.lang.String) Non Vegetarian corner consists of only three or limited types of meat types. But the most available is the chicken,(java.lang.Character) 2]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:46)
at org.testng.internal.Parameters.injectParameters(Parameters.java:909)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:37)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- addingCategories -->
</testsuite> <!-- Default test -->
